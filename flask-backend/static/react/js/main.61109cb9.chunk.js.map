{"version":3,"sources":["Register.js","App.js","reportWebVitals.js","index.js"],"names":["Register","useState","username","setUsername","today","Date","date","getDate","getMonth","getFullYear","time","getHours","getMinutes","weekday","getDay","className","Form","method","action","type","id","placeholder","name","autoComplete","required","value","onChange","e","target","onClick","axios","post","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAiEeA,MA1Df,WACI,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsBF,mBAAS,IAA/B,mBAcIG,GAdJ,UAcY,IAAIC,MACZC,EAAOF,EAAMG,UAAY,KAAOH,EAAMI,WAAW,GAAK,IAAMJ,EAAMK,cAClEC,EAAON,EAAMO,WAAa,IAAMP,EAAMQ,aAGtCC,EADY,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YADzET,EAAMU,UAIhB,OACI,sBAAKC,UAAU,YAAf,UACG,sBAAKA,UAAU,MAAf,UACA,eAACC,EAAA,EAAD,CAAMC,OAAO,OAAOC,OAAO,cAA3B,UACI,qBAAKH,UAAU,eAAf,SAEI,uBAAOI,KAAK,OAAOC,GAAG,WAAWC,YAAY,WAAWC,KAAK,WAAWC,aAAa,MAAMC,UAAQ,EAACC,MAAOvB,EAAUwB,SAAU,SAAAC,GAAC,OAAExB,EAAYwB,EAAEC,OAAOH,YAE3J,qBAAKV,UAAU,aAAf,SACI,wBAAQI,KAAK,SAASJ,UAAU,MAAMc,QA5BpC,WACbC,IAAMC,KAAK,mCAAmC,CAC1C7B,SAAWA,KA0BJ,8BAIR,cAACc,EAAA,EAAD,CAAMC,OAAO,OAAOC,OAAO,SAA3B,SACI,qBAAKH,UAAU,aAAf,SACI,wBAAQI,KAAK,SAASJ,UAAU,MAAMc,QA5BvC,WACVC,IAAMC,KAAK,8BAA8B,CACrC7B,SAAUA,KA0BH,2BAKR,sBAAKa,UAAU,KAAf,UACK,6BAAKL,IACL,6BAAKJ,IACL,6BAAKO,IACL,0BAGJ,qBAAKE,UAAU,YAAf,SACI,sCAAU,IAAIV,MAAOI,cAArB,mCC9CDuB,MATf,WACE,OACE,qBAAKjB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"js/main.61109cb9.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Form} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport './Register.css';\r\n\r\n\r\n\r\nfunction Register() {\r\n    const [username, setUsername] = useState('');\r\n    const [val, setVal] = useState('');\r\n\r\n    const register = () =>{\r\n        axios.post(\"http://localhost:5000/video_feed\",{\r\n            username : username\r\n        })\r\n    }\r\n    \r\n    const login = () =>{\r\n        axios.post(\"http://localhost:5000/login\",{\r\n            username: username\r\n        })\r\n    }\r\n\r\n    var today = new Date();\r\n    var date = today.getDate() + \"-\" + (today.getMonth()+1) + \"-\" + today.getFullYear();\r\n    var time = today.getHours() + \":\" + today.getMinutes();\r\n    var day = today.getDay();\r\n    var dayOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\r\n    var weekday = dayOfWeek[day]\r\n\r\n    return (      \r\n        <div className=\"container\">\r\n           <div className=\"box\">\r\n           <Form method=\"POST\" action=\"/video_feed\">\r\n               <div className=\"form-group-1\">\r\n                   {/*<label for=\"username\">Username</label>*/}\r\n                   <input type=\"text\" id=\"username\" placeholder=\"Username\" name=\"username\" autoComplete=\"off\" required value={username} onChange={e=>setUsername(e.target.value)}></input>\r\n               </div>\r\n               <div className=\"form-group\">\r\n                   <button type=\"submit\" className=\"btn\" onClick={register}>Register Me</button>\r\n               </div>\r\n\r\n           </Form>\r\n           <Form method=\"POST\" action=\"/login\">\r\n               <div className=\"form-group\">\r\n                   <button type=\"submit\" className=\"btn\" onClick={login}>SignIn</button>\r\n                </div>\r\n           </Form>\r\n           </div>\r\n\r\n           <div className=\"dt\">\r\n                <h1>{time}</h1>\r\n                <h2>{date}</h2>\r\n                <h3>{weekday}</h3>\r\n                <h3></h3>\r\n           </div>\r\n\r\n            <div className=\"copyright\">\r\n                <p>&copy;{new Date().getFullYear()} - All Rights Reserved.</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import './App.css';\nimport Register from './Register';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Register/>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}